//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-30672275
// Cuda compilation tools, release 11.5, V11.5.119
// Based on NVVM 7.0.1
//

.version 7.5
.target sm_86
.address_size 64

	// .globl	adaptiveThresholdKernel

.visible .entry adaptiveThresholdKernel(
	.param .u64 adaptiveThresholdKernel_param_0,
	.param .u64 adaptiveThresholdKernel_param_1,
	.param .u32 adaptiveThresholdKernel_param_2,
	.param .u32 adaptiveThresholdKernel_param_3,
	.param .u32 adaptiveThresholdKernel_param_4
)
{
	.reg .pred 	%p<12>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<116>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd4, [adaptiveThresholdKernel_param_0];
	ld.param.u64 	%rd3, [adaptiveThresholdKernel_param_1];
	ld.param.u32 	%r40, [adaptiveThresholdKernel_param_2];
	ld.param.u32 	%r41, [adaptiveThresholdKernel_param_3];
	ld.param.u32 	%r42, [adaptiveThresholdKernel_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r43, %ntid.x;
	mov.u32 	%r44, %ctaid.x;
	mov.u32 	%r45, %tid.x;
	mad.lo.s32 	%r1, %r44, %r43, %r45;
	mov.u32 	%r46, %ntid.y;
	mov.u32 	%r47, %ctaid.y;
	mov.u32 	%r48, %tid.y;
	mad.lo.s32 	%r2, %r47, %r46, %r48;
	setp.ge.s32 	%p1, %r1, %r40;
	setp.ge.s32 	%p2, %r2, %r41;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB0_14;

	neg.s32 	%r3, %r42;
	mov.u32 	%r112, 0;
	setp.gt.s32 	%p4, %r3, %r42;
	mov.u32 	%r113, %r112;
	@%p4 bra 	$L__BB0_11;

	add.s32 	%r4, %r40, -1;
	add.s32 	%r5, %r41, -1;
	max.s32 	%r53, %r3, %r42;
	add.s32 	%r6, %r53, %r42;
	add.s32 	%r54, %r6, 1;
	mov.u32 	%r55, 1;
	and.b32  	%r7, %r54, 3;
	mov.u32 	%r56, 3;
	sub.s32 	%r57, %r1, %r42;
	min.s32 	%r58, %r57, %r4;
	max.s32 	%r8, %r58, 0;
	sub.s32 	%r9, %r55, %r42;
	add.s32 	%r59, %r9, %r1;
	min.s32 	%r60, %r59, %r4;
	max.s32 	%r10, %r60, 0;
	mov.u32 	%r61, 2;
	sub.s32 	%r11, %r61, %r42;
	add.s32 	%r62, %r11, %r1;
	min.s32 	%r63, %r62, %r4;
	max.s32 	%r12, %r63, 0;
	sub.s32 	%r13, %r56, %r42;
	setp.eq.s32 	%p5, %r7, 0;
	setp.lt.u32 	%p8, %r6, 3;
	setp.eq.s32 	%p6, %r7, 1;
	setp.eq.s32 	%p7, %r7, 2;
	mov.u32 	%r101, %r3;
	mov.u32 	%r102, %r112;
	mov.u32 	%r113, %r102;

$L__BB0_3:
	add.s32 	%r65, %r101, %r2;
	min.s32 	%r66, %r65, %r5;
	max.s32 	%r67, %r66, 0;
	mul.lo.s32 	%r17, %r67, %r40;
	mov.u32 	%r104, %r3;
	@%p5 bra 	$L__BB0_7;

	add.s32 	%r68, %r8, %r17;
	cvt.s64.s32 	%rd5, %r68;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.u8 	%r69, [%rd6];
	add.s32 	%r112, %r112, %r69;
	add.s32 	%r113, %r102, 1;
	mov.u32 	%r104, %r9;
	@%p6 bra 	$L__BB0_7;

	add.s32 	%r70, %r10, %r17;
	cvt.s64.s32 	%rd7, %r70;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.u8 	%r71, [%rd8];
	add.s32 	%r112, %r112, %r71;
	add.s32 	%r113, %r102, 2;
	mov.u32 	%r104, %r11;
	@%p7 bra 	$L__BB0_7;

	add.s32 	%r72, %r12, %r17;
	cvt.s64.s32 	%rd9, %r72;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u8 	%r73, [%rd10];
	add.s32 	%r112, %r112, %r73;
	add.s32 	%r113, %r102, 3;
	mov.u32 	%r104, %r13;

$L__BB0_7:
	@%p8 bra 	$L__BB0_10;

$L__BB0_9:
	add.s32 	%r74, %r104, %r1;
	min.s32 	%r75, %r74, %r4;
	max.s32 	%r76, %r75, 0;
	add.s32 	%r77, %r76, %r17;
	cvt.s64.s32 	%rd11, %r77;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.u8 	%r78, [%rd12];
	add.s32 	%r79, %r112, %r78;
	add.s32 	%r80, %r74, 1;
	min.s32 	%r81, %r80, %r4;
	max.s32 	%r82, %r81, 0;
	add.s32 	%r83, %r82, %r17;
	cvt.s64.s32 	%rd13, %r83;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.u8 	%r84, [%rd14];
	add.s32 	%r85, %r79, %r84;
	add.s32 	%r86, %r74, 2;
	min.s32 	%r87, %r86, %r4;
	max.s32 	%r88, %r87, 0;
	add.s32 	%r89, %r88, %r17;
	cvt.s64.s32 	%rd15, %r89;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.u8 	%r90, [%rd16];
	add.s32 	%r91, %r85, %r90;
	add.s32 	%r92, %r104, 3;
	add.s32 	%r93, %r92, %r1;
	min.s32 	%r94, %r93, %r4;
	max.s32 	%r95, %r94, 0;
	add.s32 	%r96, %r95, %r17;
	cvt.s64.s32 	%rd17, %r96;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.u8 	%r97, [%rd18];
	add.s32 	%r112, %r91, %r97;
	add.s32 	%r113, %r113, 4;
	add.s32 	%r104, %r104, 4;
	setp.lt.s32 	%p9, %r92, %r42;
	@%p9 bra 	$L__BB0_9;

$L__BB0_10:
	add.s32 	%r37, %r101, 1;
	setp.lt.s32 	%p10, %r101, %r42;
	mov.u32 	%r101, %r37;
	mov.u32 	%r102, %r113;
	@%p10 bra 	$L__BB0_3;

$L__BB0_11:
	cvta.to.global.u64 	%rd19, %rd3;
	mad.lo.s32 	%r98, %r2, %r40, %r1;
	cvt.s64.s32 	%rd20, %r98;
	add.s64 	%rd21, %rd1, %rd20;
	ld.global.u8 	%r99, [%rd21];
	div.s32 	%r100, %r112, %r113;
	setp.lt.s32 	%p11, %r100, %r99;
	add.s64 	%rd2, %rd19, %rd20;
	@%p11 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;

$L__BB0_13:
	mov.u16 	%rs2, 255;
	st.global.u8 	[%rd2], %rs2;
	bra.uni 	$L__BB0_14;

$L__BB0_12:
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd2], %rs1;

$L__BB0_14:
	ret;

}

